const testInput1 = ['abcde', 'fghij', 'klmno', 'pqrst', 'fguij', 'axcye', 'wvxyz'];

const puzzleInputs = ['fzostwblnqkhpuzxirnevmaycq', 'fzastwblgqkupujxirnevmaucd', 'fzostwbxgakhpujxirnevmayci', 'uzosmwblgqkhlujxirnevmaycd', 'bzostwblgqkhpujxirnenfaycd', 'fzostwblghkhpujxibneemaycd', 'fzostwblgrkkpujxirnevqaycd', 'fzostwblgqkhpkjxirqkvmaycd', 'fzostwblgqdxpujbirnevmaycd', 'fzostwblgykhfujxirfevmaycd', 'fzostwbvgskhpujxirnevmagcd', 'flostwblgokhpuixirnevmaycd', 'fzostwblgzkhppjxirnevxaycd', 'ftosuwblgqkhpujxirnevmeycd', 'fzostkblgqkzpujxirnrvmaycd', 'fuostwbugqkhnujxirnevmaycd', 'frostwblgqkhpujsirneamaycd', 'bzostwblgqkhpajxirnevmuycd', 'fzysttbluqkhpujxirnevmaycd', 'czostgblgqkhpujxirnevmgycd', 'fzostwbcgqkhpujxirnevmavcr', 'vzostwbdgqrhpujxirnevmaycd', 'fzostwblgxkhpujxirnekmdycd', 'fzostwblgdkspzjxirnevmaycd', 'fzoqtwblgquhpujxirnevkaycd', 'fzostwblgqjhfujxirnevmayzd', 'fyostwblgtkhpujxilnevmaycd', 'izostwblzqkhpupxirnevmaycd', 'fzoaurblgqkhpujxirnevmaycd', 'fzostjblgqkhpbjxirbevmaycd', 'fzostwblgqkhpujmirngvmayca', 'fxostwbhgqkhiujxirnevmaycd', 'fzostwblngkhpujxirnemmaycd', 'fzosgwblgqkhpujxirnlvqaycd', 'bpostwblgqkhxujxirnevmaycd', 'fzhstwblgqshpujxirnepmaycd', 'fzootwbegqkhwujxirnevmaycd', 'fzmstwblgqkhmujxirnevsaycd', 'fzostwolgqkhpujxirnevmaysp', 'foostwblgqohpujxirnevmayyd', 'fzostwblgqkhgujxgrnevqaycd', 'fzostwbltqkhjujxipnevmaycd', 'fsostwblgqkhfujxirnevmayck', 'fzostwmlgqkbpujxifnevmaycd', 'fdostwblgqkhsujxirnecmaycd', 'fzostwblgquhpejxiinevmaycd', 'fzoqtwblgqkhkujxirnevmaywd', 'fzostwblmqkmpujxirnyvmaycd', 'fzjstwblgqkhpuyxirneomaycd', 'fzortwblgqkhpzjxprnevmaycd', 'fzosnwulgqkhpujxirnevpaycd', 'fzostwbegqkvpujxirnevmaykd', 'fzostwylzqkypujxirnevmaycd', 'fioshwblgqehpujxirnevmaycd', 'fzostwbliqkhoujxirnesmaycd', 'fzostwblgqkhpujdirnelmqycd', 'fzmstwblgqkhpujxirnnvpaycd', 'fzostwbtgqkhcujxirnevmaycz', 'fzostwblgqkfpujeignevmaycd', 'fzostwbegqkhpuvxirndvmaycd', 'fzostwblgqkcpujxmrnevmaycp', 'fvostwblgqkhpyjxirnevmaycx', 'fzostwblgqkhpufxirnevmzacd', 'fzisjwblglkhpujxirnevmaycd', 'fzosowbliqkhgujxirnevmaycd', 'fzostwblgqkhpujxirnyvmaywl', 'fzostwbllqnzpujxirnevmaycd', 'fzostwblgquhpujxirneomayci', 'fzostwblgqjepujximnevmaycd', 'fzostwblgqrhbujxijnevmaycd', 'fzostoblgqkhpujxirnevmoynd', 'fzortwblgqkhpujxixnevjaycd', 'fzostwhlgqkapujxirnevmaych', 'fzostwblgakhpujxirnevfayct', 'faostwblgqohpljxirnevmaycd', 'fzostwbhgqkhpujxirnyvcaycd', 'fjostwblgqkhpwjxirnevjaycd', 'fzostwblgqklpuixirnevmayxd', 'fzostwblgqkhhujxirncvmayce', 'fzostwblzqkhpzjxkrnevmaycd', 'fzostwblqqkbpujxirnevmcycd', 'ffostwblxqkhpujxirnevmayxd', 'fzostwblgqkhpbuxirnefmaycd', 'szostiblgqkhpujxirnevoaycd', 'fhlstwblgqkhpujxirnevmaycb', 'fzostwblgwfhpujxirnevmayed', 'fyostwblgqkhzujxirnevmayjd', 'fzostwblgqkvrujxirnevmaucd', 'fzestwblghkhpujxirnevmaycq', 'foostwbkgqkhhujxirnevmaycd', 'fpxstwblgqkhpujxirzevmaycd', 'fsostwtlgqmhpujxirnevmaycd', 'feostwelgqkhpumxirnevmaycd', 'fzostwbvgqkhpujkirnevmayce', 'fzmsewblgqahpujxirnevmaycd', 'fzsstsblgkkhpujxirnevmaycd', 'fzostwblgqkhxajxirneumaycd', 'fzostwblmqkhpujyisnevmaycd', 'gzostwblgqkhphjxirnevmavcd', 'fzostwblgckgpujxirnzvmaycd', 'qzostdblgqkhpujxirnevmaywd', 'fzoshwblgskhpufxirnevmaycd', 'fzosdwblgqkhpujkirnevjaycd', 'fzvstwblgqkhpuixdrnevmaycd', 'szostwblgqxhpujeirnevmaycd', 'fzosvwblgtkhpujxirnevmoycd', 'fzoscwblgqkkpujxirnevmvycd', 'fzostsblgqnlpujxirnevmaycd', 'fzostwblgmkhpujxlrnevjaycd', 'fzosnwblgqklpugxirnevmaycd', 'fcostwblgqpmpujxirnevmaycd', 'ozostwblgbkhpujxirnevmafcd', 'fzostwbagqkhiujxirneemaycd', 'fzosxwblgqkhpumxirneymaycd', 'fpostkblgqkhpujxianevmaycd', 'fzostwblgvkhhujxirnevmaycl', 'fzobtwtlgqkhpuwxirnevmaycd', 'fzostwvwgqkhpujxirtevmaycd', 'xzostwglgqkhpujtirnevmaycd', 'fzostwblgvkhtujxirnzvmaycd', 'jzostwblgqkhpujxirrevmvycd', 'pzostwbagqkhpujxirnevjaycd', 'fzostwclgqkhpujxirnhvmeycd', 'fzostwblglkhpujxirnevmayrf', 'fzoskwblnqkhpujxirnevmaysd', 'fzostbblgqkhpujxirnevmjycw', 'fzostwblggobpujxirnevmaycd', 'fzostwblgckhpijxirnevmayxd', 'fiostwrlgqkhpujxirnevmayck', 'frfstwblvqkhpujxirnevmaycd', 'fzowvwblgqkhpujsirnevmaycd', 'fzostwblgquhgujxirnevmiycd', 'fzoztwblgqkhpujxvrnevmaycj', 'fzostnbtgqkhpujxixnevmaycd', 'fzfstwblgjkrpujxirnevmaycd', 'fzostwblpqkhpdrxirnevmaycd', 'fivstwblgqkhpuixdrnevmaycd', 'fzostwbpgqkhpdjxirnewmaycd', 'fzostwblgqkhpdjxsrngvmaycd', 'fzostwblsqkhpujxisnxvmaycd', 'fcosvwblgqkhpujxirnevmavcd', 'fzostwrlgekhgujxirnevmaycd', 'fzostwblgqkhpujxindeimaycd', 'uzostwblgqshpujxirnevmwycd', 'fzostwzliqkhpujxirnevmaycu', 'zzostwbtgqkhpijxirnevmaycd', 'fzoltwblgqkhpujxinncvmaycd', 'fzostwblgqkzpujxprnevmayhd', 'fqostwblgqkhpujrirnevmzycd', 'jzostwblgqkhpuzxkrnevmaycd', 'fzostwblgqkhpuwxirszvmaycd', 'fzostwblgqkhpxjxilnevdaycd', 'fpmstwblgqkhpujxirnwvmaycd', 'fzoejwblqqkhpujxirnevmaycd', 'fzostwblgkshzujxirnevmaycd', 'fzoatqblgqxhpujxirnevmaycd', 'fzostwblgpkhpujiipnevmaycd', 'fzostwblgqghpujgbrnevmaycd', 'izosowblgqkhpujxirnejmaycd', 'fzostwblgqthpujxjrnevmalcd', 'fzovtwbcgqkhpujxicnevmaycd', 'fzoatwblgqkhpujxidntvmaycd', 'kzpstwblgqihpujxirnevmaycd', 'fzosawnlgqkhpujxibnevmaycd', 'fzostwblgqkhpujxarnevdajcd', 'bzostwblgqkhpujxvrnevmrycd', 'fzostwblgqkhpwfxirnevmazcd', 'fzostwblgqknpujyiqnevmaycd', 'zzostwblgqkhpujyirneqmaycd', 'flosiwblgqihpujxirnevmaycd', 'fzoetwblgqkhxujxirnevmeycd', 'fznstwbugqkhpujxibnevmaycd', 'fzbstwblgqkhpudxitnevmaycd', 'fzostwblgqkhkujxirnexaaycd', 'fzohthblgqkhpujxiknevmaycd', 'fzostwblgqkhpujxirnevvayjt', 'fzostwblggkhpujxirnrvqaycd', 'fzostwblgqslpujxirnevmaysd', 'aoostwblgqkhpnjxirnevmaycd', 'fzostwblgqkhlutxirnevuaycd', 'fxostwbugqkhpujxirnexmaycd', 'fzoftwblgqkhpsjxirnevmaywd', 'fzbstwblgqkhndjxirnevmaycd', 'fzostwblgqkhpxjxipnlvmaycd', 'fzostwbloqkhowjxirnevmaycd', 'fzostwblgqkcpdjxirnevnaycd', 'vzostiblgqkhpsjxirnevmaycd', 'fzostwblgqkhazjxirnevmaycg', 'fzostaklgqkhpujxirnevmaypd', 'fzostwblgkkhppjxirnevpaycd', 'izostwblgqkhpujairhevmaycd', 'fzostwdlgqkhpuqxzrnevmaycd', 'fzostwblgqkepujxernevmayct', 'fzostdblgqkhpujxyrnehmaycd', 'fzostwblgqkhsujxirnenfaycd', 'fzostwblgqkhpujxifnevmajld', 'fzostwblgokhpujxirxemmaycd', 'fzastwblcqkhpujxiruevmaycd', 'fzostwsxgqkhpuexirnevmaycd', 'xzosxwblgqkhpujxirnetmaycd', 'fzostwblgqkhpuexirnevmkccd', 'fzostwblgqklpujxirnermfycd', 'fzoetwblgqkhpujxirnehhaycd', 'ffostwblgvkhpujxirnevmazcd', 'fcosywblgqkhpujxirnevmaycy', 'fzmstwblgqkhpujxdrnevmaycl', 'fpostwblgqahpujxirnqvmaycd', 'fzostwbmgqkhpulxornevmaycd', 'fzostwblgqkopujxqrnevmrycd', 'fzostwblgqkhpujxisnevmjgcd', 'fzogtwulfqkhpujxirnevmaycd', 'fzostwalgqkhpcjxirnevmayud', 'fzosxwblgqkhpujxirnevmasmd', 'fzostwblgrkowujxirnevmaycd', 'fzostsblgqkhpujxirnevmsccd', 'fzostwblgqkhpujxfrnnvmaocd', 'fzostwblgqkhpujxiynsvkaycd', 'fzosowblgqkhpwjxirnevmaecd', 'fzosgwblgfkhpujxyrnevmaycd', 'fzostsblgzkhpujmirnevmaycd', 'fzostwblrqkhyuixirnevmaycd', 'qzostwblgqkhpujxyrnevmvycd', 'lzostwblgqkhpujxirqevmaymd', 'fzostwblgqkbpujxirnefbaycd', 'fzostwblgmihpujxirnevmafcd', 'fzostmblgqkhpujxirnevmpynd', 'fzoltwblgqkhpujlihnevmaycd', 'fzostwblgqkhpujdirneviyycd', 'fzgspwblgqkhpqjxirnevmaycd', 'fzostwblgqkhtujkirnevmayld', 'fjostwblgqkhpagxirnevmaycd', 'fzpsthblgqkhpuzxirnevmaycd', 'fzostwblgqkhpuhxzrneymaycd', 'fzoftwblgqkepujxirnevcaycd', 'fzostwblgqkbpyjxipnevmaycd', 'fzostwqlgqkhpujxirjevmayad', 'fzoxtwblgqkypupxirnevmaycd', 'fzostwblgqwhpuoxiynevmaycd', 'fzostwblgqkhpfjkirnevmavcd', 'fzoqtwblgqkhpujxirnermaycp', 'fzostwbngxkhpujxirnevmayqd', 'fzostwqogqkhpcjxirnevmaycd', 'fzostwblyqkhpujxvrnevmayzd', 'vzostwblgqkhpujxirnevmlzcd', 'fzostwblaqkhpujxirnevbajcd', 'fdostwblgqkhpujxzrnevmayod', 'fzostxbloqkhpujxirnevmcycd', 'fzostwbcgqkhpyjxirnegmaycd', 'fzostwblgqkhpuyxirnzrmaycd', 'fzustwycgqkhpujxirnevmaycd'];

const removeCharAtPosition = (someString, index) => someString.slice(0, index) + someString.slice(index + 1);

const boxIDsMatch = (index, firstBoxID, secondBoxID, incorrectMatchCount) => {
    if (index === 0) {
        if ((incorrectMatchCount === 0) ||
            ((incorrectMatchCount === 1) && (firstBoxID[index] === secondBoxID[index]))) {
            return firstBoxID;
        } else {
            return '';
        }
    } else if (incorrectMatchCount < 2) {
        if (firstBoxID[index] !== secondBoxID[index]) {
            const newFirstBoxID = removeCharAtPosition(firstBoxID, index);
            const newSecondBoxID = removeCharAtPosition(secondBoxID, index);
            incorrectMatchCount++;
            return boxIDsMatch(index, newFirstBoxID, newSecondBoxID, incorrectMatchCount);
        }
        return boxIDsMatch(--index, firstBoxID, secondBoxID, incorrectMatchCount);
    } else {
        return '';
    }
};

const searchHayStack = inputs => (needle, index) => {
    const hayStack = [].concat(inputs);
    hayStack.splice(index, 1);
    const matches = hayStack.map(hay => boxIDsMatch(hay.length, needle, hay, 0)).filter(hay => hay !== '');
    return matches[0];
}

const findMatches = inputs => inputs.map(searchHayStack(inputs)).filter(match => match !== undefined);

console.log('search results', findMatches(puzzleInputs));